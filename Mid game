local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

local window = Rayfield:CreateWindow({
    Name = "Trade+Dupe Script",
    LoadingTitle = "Trade+Dupe Script",
    LoadingSubtitle = "by Wendel",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "WendelCfg",
        FileName = "Trade+Dupe Script"
    },
    Discord = {
        Enabled = false,
        Invite = "",
        RememberJoins = true
    }
})

local autogem = false

-- Creating the Player tab
local playerTab = window:CreateTab("Player", 4483345998)

for level = 10, 12 do
    playerTab:CreateToggle({
        Name = "Fuse Gems for Level ".. level,
        Callback = function(value)
            autogem = value
            while autogem do
                local function GetNextGemID(currentLevel)
                    local player = game.Players.LocalPlayer
                    local gui = player:WaitForChild("PlayerGui")
                    local gemsPanel = gui:WaitForChild("GemsPanel")
                    local frame = gemsPanel:WaitForChild("Frame")
                    local bgImage = frame:WaitForChild("BgImage")
                    local list = bgImage:WaitForChild("List")
                    local scrollingFrame = list:WaitForChild("ScrollingFrame")

                    if scrollingFrame then
                        for _, child in ipairs(scrollingFrame:GetChildren()) do
                            local numtext = child:FindFirstChild("NumText")
                            if numtext then
                                local level = tonumber(numtext.Text:match("%d+"))
                                if level == currentLevel then
                                    return child.Name -- Return the ID of the gem
                                end
                            end
                        end
                    else
                        error("Error: ScrollingFrame not found.")
                    end
                    wait()
                    return nil
                end
                local function FuseGems()
                    local currentLevel = level
                    while currentLevel <= 14 do
                        local gemID = GetNextGemID(currentLevel)
                        if gemID then
                            currentLevel = currentLevel + 1 -- Increment the level for the next iteration
                            local args = {
                                [1] = {
                                    [1] = gemID,
                                    [2] = gemID,
                                    [3] = gemID,
                                    [4] = gemID,
                                    [5] = gemID
                                }
                            }
                            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("FuseGem"):InvokeServer(unpack(args))
                            wait(0.000001)
                        end
                    end
                end
                FuseGems()
            end
        end
    })
end
