    local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()
    if not OrionLib then
        error("Failed to load the OrionLib library")
        return
    end

local Window = OrionLib:MakeWindow({
        Name = "MercilessHub",
        HidePremium = false,
        SaveConfig = true,
        ConfigFolder = "WendelCfg",
        IntroEnabled = false
    })

getgenv().Settings = {
        AutoAtk = false, 
        AutoDungeon = false, 
        AutoBuyGems = {
            [10008] = false,
            [10009] = false,
            [10010] = false,
            [10011] = false,
            [10012] = false,
            [10013] = false,
            [10014] = false,
            [10015] = false,
            [10016] = false,
         },
	mespetsequiper = {},
	Range = 200,
	AutoFarm = true,
	WalkToEnemy = false,
	DamageBoost = false,
    }

    local function AutoAtk()
        while G.AutoAtk do
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 75
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("PlayerClickAttack"):FireServer()
            wait(0.01)
        end
    end

    local PlayerTab = Window:MakeTab({
        Name = "Player",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

    local ScriptsTab = Window:MakeTab({
        Name = "Scripts",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })


local AutoBuyTab = Window:MakeTab({
        Name = "Shop",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

ScriptsTab:AddToggle({
    Name = "Kill Aura/Auto Collect",
    Callback = function(state)
        if state then
            getgenv().Settings.AutoFarm = not getgenv().Settings.AutoFarm
        end
    end,
})

ScriptsTab:AddToggle({
    Name = "Damage Boost",
    Callback = function(state)
        if state then
          getgenv().Settings.DamageBoost = not getgenv().Settings.DamageBoost
        end
    end,
})

--Anti-AFk

spawn(function()
for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.Idled)) do
v:Disable()
end
end)

spawn(function()
while wait(15) do
local VirtualUser=game:service'VirtualUser'
VirtualUser:CaptureController()
VirtualUser:ClickButton2(Vector2.new())
end
end)

    ScriptsTab:AddButton({
        Name = "Auto Fuse Swords",
        Callback = function()
            while wait() do
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("FuseWeapon"):FireServer()
end
        end
    })

local playerNames = {}
for _, player in pairs(game.Players:GetPlayers()) do
    table.insert(playerNames, player.Name)
end

PlayerTab:AddDropdown(
    {
        Name = "Select Player",
        Options = playerNames,
        Callback = function(selectedPlayer)
            getgenv().Settings.selectedPlayer = selectedPlayer
        end
    }
)

PlayerTab:AddButton(
    {
        Name = "Trade Selected Player",
        Callback = function()
            if getgenv().Settings.selectedPlayer then
                game:GetService("ReplicatedStorage").Remotes.SendTrade:InvokeServer(
                    game:GetService("Players")[getgenv().Settings.selectedPlayer]
                )
            else
                warn("No player selected.")
            end
        end
    }
)
PlayerTab:AddButton(
    {Name = "Refresh Player List", Callback = function()
            playerNames = {}
            for _, player in pairs(game.Players:GetPlayers()) do
                table.insert(playerNames, player.Name)
            end
            PlayerTab:GetElement("Select Player"):UpdateOptions(playerNames)
            getgenv().Settings.selectedPlayer = nil
        end
})
    PlayerTab:AddButton({
        Name = "Anti-Lag",
        Callback = function()
        game.Lighting.ShadowSoftness = 0
    end
spawn(
    function()
        local a = game:GetService("UserInputService")
        local b = game:GetService("RunService")
        local c = function()
            b:Set3dRenderingEnabled(false)
            setfpscap(10)
            return
        end
        local d = function()
            b:Set3dRenderingEnabled(true)
            setfpscap(60)
            return
        end
        local e = function()
            a.WindowFocusReleased:Connect(c)
            a.WindowFocused:Connect(d)
            return
        end
        e()
    end)
spawn(
    function()
        pcall(
            function()
                wait(3)
                local f = game
                local g = f.Workspace
                local h = f.Lighting
                local i = g.Terrain
                i.WaterWaveSize = 0
                i.WaterWaveSpeed = 0
                i.WaterReflectance = 0
                i.WaterTransparency = 0
                h.GlobalShadows = false
                h.FogEnd = 9e9
                h.Brightness = 0
                settings().Rendering.QualityLevel = "Level01"
                for j, k in pairs(f:GetDescendants()) do
                    if k:IsA("Part") or k:IsA("Union") or k:IsA("CornerWedgePart") or k:IsA("TrussPart") then
                        k.Reflectance = 0
                    elseif k:IsA("ParticleEmitter") or k:IsA("Trail") then
                        k.Lifetime = NumberRange.new(0)
                    elseif k:IsA("Explosion") then
                        k.BlastPressure = 0
                        k.BlastRadius = 0
                    elseif k:IsA("Fire") or k:IsA("SpotLight") or k:IsA("Smoke") or k:IsA("Sparkles") then
                        k.Enabled = false
                    elseif k:IsA("MeshPart") then
                        k.Material = "Plastic"
                        k.Reflectance = 0
                    end
                end
                for j, l in pairs(h:GetChildren()) do
                    if
                        l:IsA("BlurEffect") or l:IsA("SunRaysEffect") or l:IsA("ColorCorrectionEffect") or
                            l:IsA("BloomEffect") or
                            l:IsA("DepthOfFieldEffect")
                     then
                        l.Enabled = false
                    end
                end
                sethiddenproperty(game.Lighting, "Technology", "Compatibility")
            end
        )
end)
        end})

    PlayerTab:AddButton({
        Name = "Dupe",
        Callback = function()
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("DeleteMultipleHero"):Destroy()
    end
})

autoGainPower = false
autoGainPowerLoop = nil
fireDelay = 0.1 
ScriptsTab:AddToggle({
    Name = "AutoGainPower",
    Default = false,
    Callback = function(Value)
        autoGainPower = Value
        print("Auto Gain Pwr is " .. tostring(autoGainPower))

        if autoGainPower then
            autoGainPowerLoop = game:GetService("RunService").Heartbeat:Connect(function()
                local remotes = game:GetService("ReplicatedStorage"):FindFirstChild("Remotes")
                if remotes and remotes:FindFirstChild("PlayerClickAttack") then
                    remotes.PlayerClickAttack:FireServer()
                end
                wait(fireDelay)
            end)
        else
            if autoGainPowerLoop then
                autoGainPowerLoop:Disconnect()
                autoGainPowerLoop = nil
            end
        end
    end
})
    ScriptsTab:AddButton({
        Name = "SimpleSpy",
        Callback = function()
            loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/78n/SimpleSpy/main/SimpleSpyBeta.lua"))()
        end
    })
    local AutoDungeonTab = Window:MakeTab({
        Name = "Auto-Dungeon",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

    local FuseTab = Window:MakeTab({
        Name = "Auto-FuseGem",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

    local GemScript = Window:MakeTab({
        Name = "Op-Gem Script",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = true
    })
 
local function a()
    local c = game.Players.LocalPlayer
    local d = c:WaitForChild("PlayerGui")
    local e = d:WaitForChild("GemsPanel")
    local f = e:WaitForChild("Frame")
    local g = f:WaitForChild("BgImage")
    local h = g:FindFirstChild("List")
    local i = h:FindFirstChild("ScrollingFrame")
    local gemIds = {}
    if i then
        for p, q in ipairs(i:GetChildren()) do
            local r = q:FindFirstChild("NumText")
            if r then
                table.insert(gemIds, q.Name)
            end
        end
        if #gemIds > 0 then
            print("Gem IDs found:")
            for k, v in ipairs(gemIds) do
                print("gem".. k.. ":", v)
            end
        else
            print("No gem IDs found.")
        end
    else
        error("Error: ScrollingFrame not found.")
    end
    return gemIds
end

local function s(gemIds)
    while true do
        if #gemIds >= 5 then
            local t = {}
            for k, v in ipairs(gemIds) do
                table.insert(t, {v})
            end
            print("Invoking FuseGem remote with args:", t)
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("FuseGem"):InvokeServer(unpack(t))
            table.remove(gemIds, 1)
            table.remove(gemIds, 1)
            table.remove(gemIds, 1)
            table.remove(gemIds, 1)
            table.remove(gemIds, 1)
        else
            print("Not enough gems to fuse.")
        end
        wait(0.1)
    end
end

FuseTab:AddToggle(
    {Name = "Auto Fuse All Gems", Default = false, Callback = function(v)
        G["AutoFuseAllGems"] = v
        if v then
            local gemIds = a()
            while G["AutoFuseAllGems"] do
                s(gemIds)
            end
        end
    end}
)

    local AutoRaidTab = Window:MakeTab({
        Name = "Auto-Raid",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

AutoRaidTab:AddButton({
        Name = "AutoCollectChestInRaid",
        Callback = function()
            loadstring(game:HttpGet('https://raw.githubusercontent.com/xALLQWT/AUTORAID/main/g'))() 
        end
    })

    local difficultyDropdown = AutoRaidTab:AddDropdown({
        Name = "Difficulty",
        Options = {"Easy", "Medium", "Hard", "Impossible"},
        CurrentOption = "1",
        Callback = function(option)
            G.difficulty = tonumber(option)
        end
    })

    local AutoRaidToggle = AutoRaidTab:AddToggle({
        Name = "Auto-Raid",
        Default = false,
        Callback = function(Value)
            if Value then
                local function restartScript()
                    local userID = game.Players.LocalPlayer.UserId
                    local args = {
                        [1] = "Room3"
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("EnterRaidRoom"):FireServer(unpack(args))
                    args = {
                        [1] = {
                            ["difficulty"] = G.difficulty,
                            ["roomName"] = "Room3",
                            ["selectMapId"] = 50105
                        }
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("SelectRaidsDifficulty"):FireServer(unpack(args))
                    args = {
                        [1] = {
                            ["userIds"] = {
                                [1] = userID
                            },
                            ["roomName"] = "Room3"
                        }
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("StartChallengeRaidMap"):InvokeServer(unpack(args))
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("LocalPlayerTeleportSuccess"):InvokeServer()
                    wait(240)
                    args = {
                        [1] = {
                            ["currentSlotIndex"] = 1,
                            ["toMapId"] = 50201
                        }
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("QuitRaidsMap"):InvokeServer(unpack(args))
                    wait(60)
                    restartScript()
                end
                restartScript()
            end
        end
    })
})

    local gems = {
    { Name = "Lvl 3 Ruby",     Value = 10008 },
    { Name = "Lvl 3 Sapphire", Value = 10009 },
    { Name = "Lvl 3 Emerald",  Value = 10010 },
    { Name = "Lvl 5 Ruby",     Value = 10011 },
    { Name = "Lvl 5 Sapphire", Value = 10012 },
    { Name = "Lvl 5 Emerald",  Value = 10013 },
    { Name = "Lvl 7 Ruby",     Value = 10014 },
    { Name = "Lvl 7 Sapphire", Value = 10015 },
    { Name = "Lvl 7 Emerald",  Value = 10016 }
}

local dropdown = AutoBuyTab:AddDropdown({
    Name = "AutoBuy Gem",
    Default = gems[1].Value,
    Options = {},
    Callback = function(Value)
        for i, gem in ipairs(gems) do
            getgenv().Settings.AutoBuyGems[gem.Value] = gem.Value == Value
        end
    end,
})

for _, gem in ipairs(gems) do
    dropdown.Options[gem.Name] = gem.Value
end

AutoBuyTab:AddToggle({
    Name = "AutoBuy Enabled",
    Default = false,
    Callback = function(Value)
        for _, gem in ipairs(gems) do
            getgenv().Settings.AutoBuyGems[gem.Value] = Value
        end
    end,
})

local function TeleportToAndFromDungeon(dungeonMapId, returnMapId, returnTime)
    -- Teleport the player to the specified dungeon
    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("LocalPlayerTeleport"):FireServer(
        {
            ["mapId"] = dungeonMapId
        }
    )
    wait(returnTime)
    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("LocalPlayerTeleport"):FireServer(
        {
            ["mapId"] = returnMapId
        }
    )
end
local AutoDungeonToggle =
    AutoDungeonTab:AddToggle(
    {
        Name = "Auto-Dungeon(FINALLY FIXED!!!)",
        Default = false,
        Callback = function(Value)
            if Value then
                while true do
                    local currentTime = os.time()
                    local nextTeleportTime = math.ceil(currentTime / (30 * 60)) * (30 * 60) - 15
                    local waitTime = nextTeleportTime - currentTime
                    wait(waitTime)
                    TeleportToAndFromDungeon(50016, 50001, 15 * 60)
                end
            end
        end
    }
)
            spawn(function()
                while wait(1) do
                    for _, v in pairs(game.Workspace.Golds:GetChildren()) do
                        v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                    end
                end
            end)

            local WeaponsInventory = require(game:GetService("ReplicatedStorage").Scripts.Client.Manager.PlayerManager)
            pcall(function()
                for _, v in pairs(WeaponsInventory.localPlayerData.heros) do
                    if v.isEquip == true then
                        table.insert(getgenv().Settings.mespetsequiper, v.guid)
                    end
                end
            end)

            spawn(function()
                local function Getenemies()
                    local nearest, dist = nil, getgenv().Settings.Range
                    local Players = game.Players
                    local localPlayer = Players.LocalPlayer
                    local localCharacter = localPlayer.Character
                    local humanoidRootPart = localCharacter and localCharacter:FindFirstChild("HumanoidRootPart")
                    if not humanoidRootPart then return end

                    for _, enemy in pairs(Workspace.Enemys:GetChildren()) do
                        if enemy:FindFirstChild("HumanoidRootPart") and enemy.HumanoidRootPart:FindFirstChild("EnemyNameGui") and enemy.HumanoidRootPart.EnemyNameGui.HealthNum.Text ~= "0" then
                            local distance = (humanoidRootPart.Position - enemy.HumanoidRootPart.Position).magnitude
                            if distance < dist then
                                dist = distance
                                nearest = enemy
                            end
                        end
                    end
                    return nearest
                end

                while task.wait() do
                    if getgenv().Settings.AutoFarm then
                        local nearestEnemy = Getenemies()

                        if nearestEnemy then
                            spawn(function()
                                if getgenv().Settings.WalkToEnemy then
                                    if nearestEnemy:FindFirstChild("HumanoidRootPart") then
                                        player.Character.Humanoid:MoveTo(nearestEnemy.HumanoidRootPart.Position)
                                    end
                                end
                            end)

                            spawn(function()
                                local args = { nearestEnemy:GetAttribute("EnemyGuid") }
                                game:GetService("ReplicatedStorage").Remotes.ClickEnemy:InvokeServer(unpack(args))
                                game:GetService("ReplicatedStorage").Remotes.PlayerClickAttack:FireServer(unpack(args))
                            end)

                            if getgenv().Settings.DamageBoost then
                                for c, d in pairs(getgenv().Settings.mespetsequiper) do
                                    local a = { [1] = { ["heroGuid"] = tostring(d), ["harmIndex"] = 1, ["isSkill"] = false, ["skillId"] = 200003 } }
                                    game:GetService("ReplicatedStorage").Remotes.HeroSkillHarm:FireServer(unpack(a))
                                end
                            end
                        end
                    end
                end
            end)
	end
